[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"birthdays-container\">\n    <h2>Upcoming Birthdays</h2>\n    <div class=\"birthdays-list-wrapper\">\n        <ul class=\"birthdays-list\" id=\"birthday-list\">\n        </ul>\n    </div>\n</div>",
  "modified": "2025-02-12 11:33:47.911841",
  "name": "UpComing Birthdays",
  "private": 0,
  "roles": [],
  "script": "frappe.call({\n    method: 'sarvadhi_hrms.utils.utility_functions.get_upcoming_birthdays',\n    callback: function(response) {\n        let birthdays = response.message;\n        let birthdaysList = root_element.getElementById(\"birthday-list\");\n\n        if (birthdays && birthdays.length > 0) {\n            var birthdayItems = birthdays.map(function(birthday) {\n                return `\n                        <li>\n                            <div class=\"birthday-details\">\n                                <span class=\"birthday-name\">${birthday.employee_name}</span>\n                                <span class=\"birthday-name-designation\">${birthday.designation}</span>\n                            </div>\n                            <div class=\"birthday-date-container\">\n                                <span class=\"birthday-date\">${birthday.date_of_birth}</span>\n                                <span class=\"birthday-day\">${birthday.day_name}</span>\n                            </div>\n                        </li>\n                `;\n            }).join('');\n            birthdaysList.innerHTML = birthdayItems;\n        } else {\n            birthdaysList.innerHTML = '<li class=\"no-data\">No upcoming birthdays.</li>';\n        }\n    },\n    error: function(error) {\n        console.error(\"Error fetching birthdays:\", error);\n    }\n});\n",
  "style": ".birthdays-container {\n    background-color: #ffffff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    max-width: 300px;\n}\n\n.birthdays-container h2 {\n    text-align: left;\n    font-size: 18px;\n    font-weight: bold;\n    color: #333;\n    margin-bottom: 12px;\n    font-family: 'Arial', sans-serif;\n}\n\n.birthdays-list-wrapper {\n    max-height: 300px; /* Ensure it remains scrollable */\n    overflow-y: auto;\n    /*border : 1px solid red;*/\n}\n\n.birthdays-list {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.birthdays-list li {\n    padding: 12px 0;\n    border-bottom: 1px solid #ddd;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 16px;\n    color: #333;\n}\n\n.birthdays-list li:first-child {\n    border-top: 1px solid #ddd;\n}\n\n.birthdays-list .birthday-details {\n    display: flex;\n    flex-direction: column;\n}\n\n.birthdays-list .birthday-name {\n    font-weight: 500;\n    color: #333;\n}\n\n.birthdays-list .birthday-name-designation {    \n    font-size: 12px;\n    color: #777;\n    text-align: left;\n}\n.birthday-date-container {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    text-align: right;\n}\n.birthdays-list .birthday-date {\n    font-weight: bold;\n    color: #2c3e50;\n    text-align: right;\n}\n\n.birthdays-list .birthday-day {\n    font-size: 12px;\n    color: #777;\n    text-align: right;\n}\n\n/* Scrollbar styling */\n.birthdays-list-wrapper::-webkit-scrollbar {\n    width: 6px;\n}\n\n.birthdays-list-wrapper::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 6px;\n}\n\n.birthdays-list-wrapper::-webkit-scrollbar-track {\n    background: #f1f1f1;\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div id=\"upcoming-holidays\" class=\"holidays-container\">\n    <h2>Upcoming Holidays in 2025</h2>\n    <ul id=\"holidays-list\" class=\"holidays-list\">\n    </ul>\n</div>",
  "modified": "2025-02-11 23:18:32.983925",
  "name": "UpComing Holidays",
  "private": 0,
  "roles": [],
  "script": "frappe.call({\n    method: 'sarvadhi_hrms.utils.utility_functions.get_upcoming_holidays',\n    callback: function(response) {\n        var holidays = response.message;\n        \n        var holidaysList = root_element.querySelector('#holidays-list');  \n        \n        if (holidays && holidays.length > 0) {\n                var holidayItems = holidays.map(function(holiday) {\n                    return `<li class=\"holiday-item\">\n                        <div class=\"holiday-name\">${holiday.holiday_name}</div>\n                        <div class=\"holiday-date-container\">\n                            <span class=\"holiday-date\">${holiday.holiday_date}</span>\n                            <span class=\"holiday-day\">${holiday.dayname}</span>\n                        </div>\n                    </li>`;\n                }).join('');\n                holidaysList.innerHTML = holidayItems;\n            } else {\n                holidaysList.innerHTML = '<li>No upcoming holidays for 2025.</li>';\n            }\n    },\n    error: function(error) {\n        console.error(\"Error fetching holidays:\", error);\n    }\n});\n",
  "style": ".holidays-container {\n    background-color: #ffffff;\n    padding: 20px;\n    border-radius: 16px;\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    max-width: 400px;\n}\n\n.holidays-container h2 {\n    font-size: 18px;\n    color: #333;\n    font-weight: bold;\n    margin-bottom: 15px;\n}\n\n.holidays-list {\n    list-style: none;\n    margin: 0;\n    max-height: 250px; /* Set the maximum height */\n    overflow-y: auto; /* Enable vertical scrolling */\n    padding: 5px;\n}\n\n.holidays-list::-webkit-scrollbar {\n    width: 5px;\n}\n\n.holidays-list::-webkit-scrollbar-thumb {\n    background-color: #ccc;\n    border-radius: 5px;\n}\n\n.holidays-list::-webkit-scrollbar-track {\n    background: #f1f1f1;\n}\n\n.holiday-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 6px 0;\n    border-bottom: 1px solid #ddd;\n}\n\n.holiday-item:first-child {\n    border-top: 1px solid #ddd;\n}\n\n.holiday-name {\n    font-size: 16px;\n    color: #333;\n    font-weight: bold;\n}\n\n.holiday-date-container {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    text-align: right;\n}\n\n.holiday-date {\n    font-size: 14px;\n    color: #333;\n    font-weight: bold;\n}\n\n.holiday-day {\n    font-size: 12px;\n    color: #888;\n}\n\n.no-holidays {\n    text-align: center;\n    font-style: italic;\n    color: #888;\n    padding: 10px 0;\n}\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"profile-card\">\n    <div class=\"profile-header\">\n        <img id=\"profile-img\" src=\"\" alt=\"Profile Picture\" class=\"profile-img\">\n    </div>\n    <div class=\"profile-info\">\n        <p id=\"user-name\" class=\"user-name\"></p>\n        <p id=\"user-email\" class=\"user-email\"></p>\n    </div>\n</div>\n",
  "modified": "2025-02-11 22:55:01.021320",
  "name": "Profile Card",
  "private": 0,
  "roles": [],
  "script": "frappe.call({\n    method: 'frappe.client.get',\n    args: {\n        doctype: 'User',\n        name: frappe.session.user // Get details for logged-in user\n    },\n    callback: function(response) {\n        if (response.message) {\n            var user = response.message;\n\n            // Set profile image (Use default if empty)\n            root_element.getElementById('profile-img').src = user.user_image || \"/assets/frappe/images/default-avatar.png\";\n\n            // Set user name\n            root_element.getElementById('user-name').innerHTML = \"<strong>\" + user.full_name + \"</strong>\";\n\n            // Set email\n            root_element.getElementById('user-email').textContent = user.email || \"No Email\";\n        }\n    },\n    error: function(error) {\n        console.error(\"Error fetching user details:\", error);\n    }\n});\n",
  "style": "/* Profile Card Container */\n.profile-card {\n    background-color: #fff;\n    border-radius: 12px;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    width: 300px;\n    text-align: center;\n    padding: 20px;\n    font-family: 'Arial', sans-serif;\n    position: relative;\n    overflow: hidden;\n}\n\n/* Profile Header (Image) */\n.profile-header {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 10px;\n}\n\n.profile-img {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    border: 3px solid #fff;\n    object-fit: cover;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n}\n\n/* User Info */\n.user-name {\n    font-size: 16px;\n    font-weight: bold;\n    color: #333;\n    margin: 5px 0;\n}\n\n.user-email {\n    font-size: 14px;\n    color: #666;\n    margin: 0;\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div id=\"todo-list-container\" class=\"todo-container\">\n    <h2>My To-Do List</h2>\n    <ul id=\"todo-list\" class=\"todo-list\"></ul>\n</div>\n",
  "modified": "2025-02-11 23:11:39.260587",
  "name": "ToDo List",
  "private": 0,
  "roles": [],
  "script": "frappe.call({\n    method: 'frappe.client.get_list',\n    args: {\n        doctype: 'ToDo',\n        filters: {\n            owner: frappe.session.user // Fetch tasks only for logged-in user\n        },\n        fields: ['name', 'description', 'date'],\n        order_by: 'date asc', // Sort by due date\n        limit_page_length: 10 // Limit tasks to 10\n    },\n    callback: function(response) {\n        var todos = response.message;\n        var todoList = root_element.getElementById('todo-list');\n\n        if (todos && todos.length > 0) {\n            var todoItems = todos.map(function(todo) {\n                // let dueDate = new Date(todo.date);\n                // let options = { weekday: 'long', day: 'numeric', month: 'short' };\n                // let formattedDate = dueDate.toLocaleDateString('en-US', options);\n\n                return `<li>\n                    <div class=\"todo-details\">\n                        <span class=\"todo-name\">${todo.description}</span>\n                        <span class=\"todo-date\">${todo.date}</span>\n                    </div>\n                </li>`;\n            }).join('');\n            todoList.innerHTML = todoItems;\n        } else {\n            todoList.innerHTML = '<li class=\"no-todo\">No pending tasks.</li>';\n        }\n    },\n    error: function(error) {\n        console.error(\"Error fetching To-Do list:\", error);\n    }\n});\n",
  "style": "/* Container */\n.todo-container {\n    background: white;\n    border-radius: 12px;\n    padding: 16px;\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n    max-width: 400px;\n    /*margin: auto;*/\n}\n\n/* Title */\n.todo-container h2 {\n    font-size: 18px;\n    font-weight: bold;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n/* Scrollable List */\n.todo-list {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    max-height: 250px; /* Limit height for scrolling */\n    overflow-y: auto;\n}\n\n/* Individual To-Do Items */\n.todo-list li {\n    background: #f8f9fa;\n    padding: 12px;\n    margin-bottom: 10px;\n    border-radius: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 14px;\n    font-weight: 500;\n    color: #333;\n    transition: all 0.3s ease-in-out;\n}\n\n/* Hover Effect */\n.todo-list li:hover {\n    background: #e3f2fd;\n}\n\n/* Task Name */\n.todo-name {\n    font-weight: bold;\n    color: #2c3e50;\n}\n\n/* Due Date */\n.todo-date {\n    background: #e0f3ff;\n    padding: 6px 10px;\n    border-radius: 8px;\n    font-size: 12px;\n    color: #007bff;\n    font-weight: bold;\n}\n\n/* Empty List Message */\n.no-todo {\n    font-size: 14px;\n    color: #888;\n    padding: 20px;\n    font-style: italic;\n}\n"
 }
]